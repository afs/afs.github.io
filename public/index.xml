<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Andy Seaborne on AFS</title>
    <link>http://afs.github.io/</link>
    <description>Recent content in Andy Seaborne on AFS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language><atom:link href="http://afs.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apache Jena implementation of RDF Binary</title>
      <link>http://afs.github.io/rdf-thrift/jena-rdf-thrift-api.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://afs.github.io/rdf-thrift/jena-rdf-thrift-api.html</guid>
      <description>RDF Thrift has been incorporated into Apache Jena, from version 2.12.1.
Comand line The riot command has an output format argument:
riot --out=TRDF data.nt &amp;gt; data.trdf  Graphs and Datasets Use RDFDataMgr operations.
Read a graph:
Model m = RDFDataMgr.loadModel(&amp;quot;data.trdf&amp;quot;) ;  Write a model:
RDFDataMgr.write(System.out, m, Lang.RDFTHRIFT) ;  and other RDFDataMgr operations.
Reading using RDFDataMgr is preferred. model.read operations may not detect the file syntax.
SPARQL Result Sets ResultSet resultSet = ResultSetMgr.</description>
    </item>
    
    <item>
      <title>Extending SHACL to RDF Datasets</title>
      <link>http://afs.github.io/shacl-datasets.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://afs.github.io/shacl-datasets.html</guid>
      <description>Andy Seaborne
 SHACL defines a set of validation conditions in a Shapes Graph. These are used to validate an RDF Graph to produce a validation report.
This note describes applying the SHACL Shapes Constraint Language to RDF Datasets.
Overview Validation of a RDF Datasets is performed by associating a target graph with each shape in a &amp;ldquo;Shapes Dataset&amp;rdquo;. The target graph can be specified on each shape but can also be written to apply to groups of shapes.</description>
    </item>
    
    <item>
      <title>RDF and IRI Syntax</title>
      <link>http://afs.github.io/rdf-iri-syntax.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://afs.github.io/rdf-iri-syntax.html</guid>
      <description>Andy Seaborne
February, 2020
 RDF uses IRIs to refer to resources.
This page pulls together the syntax requirements for IRIs into one place. There are several documents, mostly RFCs, that define IRIs and specific IRI schemes. Getting IRIs right means data is more likely to be readable by other systems when the data is published.
Just because an IRI passes all the syntax rules, it does not make it a good choice.</description>
    </item>
    
    <item>
      <title>RDF Binary encoding using Thrift</title>
      <link>http://afs.github.io/rdf-thrift/rdf-binary-thrift.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://afs.github.io/rdf-thrift/rdf-binary-thrift.html</guid>
      <description>Binary RDF is useful for efficient processing and transfer rather than relying on text-based formats. Text based formats are more expensive to write and to parse.
The text oriented syntaxes (e.g. Turtle) provide human readability while the line-oriented syntaxes (e.g. N-Triples provide reasonable universal dump and machine exchange formats on the web. N-triples, despite being larger than Turtle, is generally reported to be faster to parse.
Apache Thrift, and Google&amp;rsquo;s Protocol Buffers are data formats designed for efficient exchange of data between co-operating processes.</description>
    </item>
    
    <item>
      <title>RDF Binary using Apache Thrift</title>
      <link>http://afs.github.io/rdf-thrift/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://afs.github.io/rdf-thrift/</guid>
      <description>RDF Binary using Apache Thrift (&amp;ldquo;RDF Thrift&amp;rdquo;) is a binary format for RDF and RDF-related data.
The W3C standard RDF syntaxes are text or XML based. These incur costs in parsing; the most human-readable formats also incur high costs to write, and have limited scalability due to the need to analyse the data for pretty printing rather than simply stream to output.
N-Triples or N-Quads are often used for datastore dump formats and for publishing large datasets because they have been found to be the best formats to read and write for this usages.</description>
    </item>
    
    <item>
      <title>SPARQL Grouping and Aggregation with no matches</title>
      <link>http://afs.github.io/sparql-agg-group-empty.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://afs.github.io/sparql-agg-group-empty.html</guid>
      <description>Andy Seaborne
March 2020
 Grouping and Aggregation is the combination of GROUP BY and one of the aggregation functions such as COUNT or MAX. When there are no matches to the WHERE clause, the spec and one of the original workign groups tests don&amp;rsquo;t agree. In the case of aggregation and no GROUP BY, the spec needs a fix to get the expected answer.
 Description Grouping and Aggregation, no matching rows Aggregation, no grouping, no matching rows Spec text Execution when grouping has no rows The &amp;ldquo;no group&amp;rdquo; case Possible Fix, &amp;ldquo;no group&amp;rdquo; case  Description Informally, what happens in grouping and aggregation is that the matches from the WHERE clause are paritioned by calculating the group key from the GROUP BY expression for each row , with each row going into a collection of rows with the same group key.</description>
    </item>
    
    <item>
      <title>Substitution of Variables in SPARQL</title>
      <link>http://afs.github.io/substitute.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://afs.github.io/substitute.html</guid>
      <description>Andy Seaborne
October 2019
 The SPARQL 1.1 algebra operation &amp;ldquo;substitute&amp;rdquo; evaluates a graph pattern where there is a specific are variables given by a solution mapping. The operation is used to in the evaluation of EXISTS and NOT EXISTS operations.
This document list problems that have been identified with the substitute operation and proposes an improved substitution evalaution process that addresses these problems based on the concept of Correlated Subquery found in SQL.</description>
    </item>
    
    <item>
      <title>Updating RDF Lists with SPARQL</title>
      <link>http://afs.github.io/rdf-lists-sparql.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://afs.github.io/rdf-lists-sparql.html</guid>
      <description>Andy Seaborne
 Migrated from the original (2011): Updating RDF Lists with SPARQL.
Something the SPARQL 1.1 Working Group discussed was updates to RDF lists.
RDF lists are hard to deal with because they are not first class objects in the RDF data model. Instead they are &amp;ldquo;encoded&amp;rdquo; in triples. The encoding using a cons cell-like structure whereby each element of the list is a blank node (not necessary a blank node but it nearly always is).</description>
    </item>
    
  </channel>
</rss>
